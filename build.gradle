buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
    id 'idea'
}

apply from: "$rootDir/gradle/publish.gradle"

if (project.hasProperty("local_script")) {
    apply from: file(local_script + "/build.local.gradle")
}

ext {
    mcVersion = project.property("mcVersion")
}

group project.property("group")
description project.property("description") as String
version project.property("version")

repositories {
    mavenCentral()
    maven { url = "https://repo.georgev22.com/releases/" }
    maven { url = "https://repo.georgev22.com/snapshots/" }
    maven { url = 'https://repo.codemc.org/repository/maven-public/' }
    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    maven { url = "https://repo.craftaro.com/repository/minecraft-plugins/" }
    maven { url = "https://libraries.minecraft.net/" }
    maven { url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    maven { url = "https://jcenter.bintray.com/" }
    maven { url = "https://rayzr.dev/repo/" }
    maven { url = 'https://jitpack.io' }
}

dependencies {
    compileOnly "dev.folia:folia-api:${mcVersion}-R0.1-SNAPSHOT"
    compileOnly "org.jetbrains:annotations:${jetbrainsAnnotationsVersion}"
    compileOnly "com.github.MilkBowl:VaultAPI:${vaultVersion}"
    compileOnly "org.ow2.asm:asm:${asmVersion}"
    compileOnly "org.ow2.asm:asm-commons:${asmVersion}"

    implementation "com.georgev22.library:database:${libraryVersion}"
    implementation "com.georgev22.library:maps:${libraryVersion}"
    implementation "com.georgev22.library:scheduler:${libraryVersion}"
    implementation "com.georgev22.library:utilities:${libraryVersion}"
    implementation "com.georgev22.library:yaml:${libraryVersion}"
    implementation "com.georgev22.library:minecraft:${libraryVersion}"
    implementation "de.tr7zw:item-nbt-api:${nbtAPIVersion}"




    // Tests
    testImplementation "org.jetbrains:annotations:${jetbrainsAnnotationsVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${jUnitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${jUnitVersion}"

    testImplementation "org.ow2.asm:asm:${asmVersion}"
    testImplementation "org.ow2.asm:asm-util:${asmVersion}"
    testImplementation "org.ow2.asm:asm-commons:${asmVersion}"
    testImplementation "com.georgev22.library:database:${libraryVersion}"
    testImplementation "com.georgev22.library:maps:${libraryVersion}"
    testImplementation "com.georgev22.library:scheduler:${libraryVersion}"
    testImplementation "com.georgev22.library:utilities:${libraryVersion}"
    testImplementation "com.georgev22.library:yaml:${libraryVersion}"
    testImplementation "com.georgev22.library:minecraft:${libraryVersion}"

    testImplementation 'org.apache.logging.log4j:log4j-api:2.22.1'
    testImplementation 'org.apache.logging.log4j:log4j-core:2.22.1'
    testImplementation 'com.google.guava:guava:33.0.0-jre'
    testImplementation 'org.slf4j:slf4j-api:2.0.12'
}

tasks.publishShadowPublicationToGeorgeV22Repository {
    dependsOn jar
}

shadowJar {
    archiveClassifier.set('shade')
    relocate 'com.georgev22.library', 'com.georgev22.voidchest.library'
    relocate 'de.tr7zw.changeme.nbtapi', 'com.georgev22.voidchest.nbtapi'
    relocate 'de.tr7zw.annotations', 'com.georgev22.voidchest.nbtapi.annotations'
}