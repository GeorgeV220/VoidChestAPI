apply plugin: 'maven-publish'

static def getBranch() {
    try {
        def process = 'git branch --show-current'.execute()
        process.waitFor()
        return process.text.trim()
    } catch (Exception e) {
        return "unknown"
    }
}

static def getHash() {
    try {
        def process = 'git rev-parse --short HEAD'.execute()
        process.waitFor()
        return process.text.trim()
    } catch (Exception e) {
        return "unknown"
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

jar {
    manifest {
        attributes(
                'Build-Jdk': "${System.properties['java.vendor']} ${System.properties['java.vm.version']}",
                'Created-By': "Gradle ${gradle.gradleVersion}",
                'Git-Branch': getBranch(),
                'Git-Hash': getHash()
        )
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = project.getName().toLowerCase()
            groupId = ((String) project.getGroup()).toLowerCase()

            artifact sourcesJar
            artifact javadocJar

            pom {
                name = project.getName().toLowerCase()
                description = project.getDescription()
                url = "https://github.com/GeorgeV220/VoidChestAPI"
                licenses {
                    license {
                        name = "GNU General Public License v3.0"
                        url = "https://github.com/GeorgeV220/VoidChestAPI/blob/main/LICENSE"
                        distribution = "repo"
                    }
                }
                developers {
                    developer {
                        id = "GeorgeV22"
                        name = "GeorgeV22"
                        email = "github@georgev22.com"
                        organization = "GeorgeV22"
                        organizationUrl = "https://github.com/GeorgeV22"
                        roles = ["developer", "maintainer"]
                    }
                }
                scm {
                    connection = "scm:git:https://github.com/GeorgeV220/VoidChestAPI.git"
                    developerConnection = "scm:git:https://github.com/GeorgeV220/VoidChestAPI.git"
                    url = "https://github.com/GeorgeV220/VoidChestAPI"
                }
                issueManagement {
                    system = "GitHub"
                    url = "https://github.com/GeorgeV220/VoidChestAPI/issues"
                }
            }
        }
    }
    repositories {
        def isGitHub = System.getenv("GITHUB_REPOSITORY") != null
        maven {
            name = "GeorgeV22"
            if (isGitHub) {
                if (getBranch().toLowerCase().contains("alpha") || getBranch().toLowerCase().contains("beta")) {
                    url = uri("https://repo.georgev22.com/snapshots")
                } else {
                    url = uri("https://repo.georgev22.com/releases")
                }
            } else {
                url = uri("https://repo.georgev22.com/snapshots")
            }

            def mavenUsername = System.getenv("MAVEN_USERNAME") ?: System.getProperty("MAVEN_USERNAME")
            def mavenPassword = System.getenv("MAVEN_PASSWORD") ?: System.getProperty("MAVEN_PASSWORD")

            if (mavenUsername && mavenPassword) {
                credentials {
                    username = mavenUsername
                    password = mavenPassword
                }
                authentication {
                    basic(BasicAuthentication)
                }
            }
        }
    }
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}